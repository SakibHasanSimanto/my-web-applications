import streamlit as st
import pandas as pd 
import pickle 

with open('model.pkl', 'rb') as f:
    model = pickle.load(f) 

st.set_page_config(
    page_title="ফুসফুস ক্যান্সার নির্ণায়ক ১.০",
    page_icon=":lungs:",  # Optional icon
    layout="wide",  # Use wide layout
    initial_sidebar_state="expanded"  # Sidebar expanded by default
)

st.title('ফুসফুস ক্যান্সার নির্ণায়ক ১.০')
st.write('অনুগ্রহ করে নিম্নোক্ত নির্দেশাবলী অনুসরণ করে আপনার ডেটা ইনপুট দিন')  

if st.button('নির্দেশাবলী'): 
    

    arr1 = ['লিঙ্গ', 'বয়স', 'ধূমপান', 'হলুদাভ ত্বক', 'দুশ্চিন্তা', 'সামাজিক চাপ',
       'দীর্ঘস্থায়ী রোগ', 'ক্লান্তি', 'এলার্জি', 'হুইজিং', 'মদ্যপান', 'কাশি',
       'শ্বাসকষ্ট', 'গলাধঃকরণ জটিলতা', 'বুক ব্যথা']
    arr2 = ['আপনার লিঙ্গ?', 'বয়স?','ধূমপান করেন?', 'ত্বক/আংগুল মাঝেমধ্যে হলুদ হয়ে যায়?','দুশ্চিন্তা করেন?','সহকর্মীদের থেকে নেতিবাচক কোনো চাপ অনুভব করেন?',
                   'দীর্ঘমেয়াদী কোনো অসুখ আছে?', 'ক্লান্তি অনুভব করেন?', 'এলার্জি আছে?', 'শ্বাস নেবার সময় বুকের ভেতরে শব্দ হয়?', 'এলকোহলজাতীয় কিছু খান?', 'কাশি আছে?', 'শ্বাসকষ্ট আছে?', 'খাবার গিলতে কষ্ট হয়?',
                   'বুকে ব্যথা আছে?'] 
    arr3 = ['মহিলা (0) / পুরুষ(1)','প্র/ন','করেন(2) / করেন না(1)','হয়(2) / হয়না(1)', 'করেন(2) / করেন না(1)', 'করেন(2) / করেন না(1)', 'আছে(2) / নেই(1)', 'করেন(2) / করেন না(1)','আছে(2) / নেই(1)',
                 'হয়(2) / হয়না(1)','খান(2) / খান না(1)','আছে(2) / নেই(1)','আছে(2) / নেই(1)','হয়(2) / হয়না(1)','আছে(2) / নেই(1)'] 
    
    info_df = pd.DataFrame({'প্রভাবক':arr1, 'প্রশ্ন': arr2, 'অপশন':arr3 }) 
    st.write(info_df)


st.write('আপনার ডেটা ইনপুট দিন')

# Create two columns for input fields
col1, col2 = st.columns(2)

with col1:
    gender = st.text_input('লিঙ্গ:') 
    age = st.text_input('বয়স:')
    smoking = st.text_input('ধূমপান করেন?') 
    ylf = st.text_input('ত্বক/আংগুল মাঝেমধ্যে হলুদ হয়ে যায়?') 
    anx = st.text_input('দুশ্চিন্তা করেন?') 
    peer_press = st.text_input('সহকর্মীদের থেকে নেতিবাচক কোনো চাপ অনুভব করেন?') 

with col2:
    chron_dis = st.text_input('দীর্ঘমেয়াদী কোনো অসুখ আছে?') 
    fatig = st.text_input('ক্লান্তি অনুভব করেন?') 
    allerg = st.text_input('এলার্জি আছে?') 
    wheez = st.text_input('শ্বাস নেবার সময় বুকের ভেতরে শব্দ হয়?') 
    alchl = st.text_input('এলকোহলজাতীয় কিছু খান?')
    cough = st.text_input('কাশি আছে?')
    breath = st.text_input('শ্বাসকষ্ট আছে?') 
    sd = st.text_input('খাবার গিলতে কষ্ট হয়?')
    chest = st.text_input('বুকে ব্যথা আছে?')

outcome = None 

if st.button('Predict'): 
    try: 
        input_list = [gender, age, smoking, ylf, anx, peer_press, chron_dis, fatig, allerg, wheez, alchl, cough, breath, sd, chest] 
        prediction = model.predict([input_list]) 
        if prediction[0] == 1: 
            outcome = 'আছে' 
        else: 
            outcome = 'নেই'

        st.success(f'ফুসফুসে ক্যান্সারের সম্ভাবনা: {outcome}') 

        if outcome == 'নেই':
            st.balloons()  # Optional for 'No' outcome as you had before, but consider the emotional tone

    except Exception as e: 
        st.error(f"Error: {e}")  

# Add Comments Section with columns
if st.button('মন্তব্য'):
    try:
        if outcome == 'আছে':
            st.write("### পূর্বাভাস: ফুসফুসের ক্যান্সার শনাক্ত হতে পারে")
            st.write("মডেলের পারফরম্যান্সের উপর ভিত্তি করে, আপনার যা বিবেচনা করা উচিত:")
            st.write(" - **নির্ভুলতা (Precision, 0.93)**: যখন মডেল ফুসফুসের ক্যান্সার ভবিষ্যদ্বাণী করে, তখন এটি ৯৩% সঠিক। এটি ইঙ্গিত করে যে আপনার ফুসফুসের ক্যান্সার হওয়ার সম্ভাবনা বেশি, তবে এটি নিশ্চিত করতে এবং চিকিৎসার বিকল্পগুলি অন্বেষণ করতে একজন স্বাস্থ্য বিশেষজ্ঞের সাথে পরামর্শ করা গুরুত্বপূর্ণ।")
            st.write(" - **রিকল (Recall, 0.90)**: মডেলটি ফুসফুসের ক্যান্সারের ৯০% ঘটনা সনাক্ত করতে পারে। যদিও এটি রোগ শনাক্ত করতে বেশ দক্ষ, কিছু ঘটনা বাদ পড়তে পারে। আপনি যেকোন উপসর্গ অবহেলা করবেন না।")
            st.write(" - **এফ১-স্কোর (F1-Score, 0.91)**: মডেলের পারফরম্যান্স ভারসাম্যপূর্ণ, যা এটিকে নির্ভরযোগ্য করে তোলে। তবে মনে রাখবেন, কোনো পূর্বাভাস মডেল পুরোপুরি নিখুঁত নয়। পরবর্তী পরীক্ষা ও নির্দেশনার জন্য একজন স্বাস্থ্য বিশেষজ্ঞের সাথে পরামর্শ করা অত্যন্ত গুরুত্বপূর্ণ।")
            st.write("আরো নিশ্চিত ডায়াগনোসিসের জন্য অবশ্যই একজন চিকিৎসা বিশেষজ্ঞের সাথে যোগাযোগ করুন এবং আপনার স্বাস্থ্য সুরক্ষার জন্য সঠিক পদক্ষেপগুলি আলোচনা করুন।")


        elif outcome == 'নেই':
            st.write("### পূর্বাভাস: ফুসফুসের ক্যান্সার শনাক্ত হয়নি")
            st.write("যাদের ক্ষেত্রে ফুসফুসের ক্যান্সার শনাক্ত হয়নি বলে পূর্বাভাস দেওয়া হয়েছে, মডেলটি যা প্রস্তাব করে:")
            st.write(" - **নির্ভুলতা (Precision, 0.90)**: মডেলটি ফুসফুসের ক্যান্সার নেই এমন পূর্বাভাস দেওয়ার সময় ৯০% সঠিক। আপনি রোগমুক্ত থাকার বিষয়ে বেশ আত্মবিশ্বাসী হতে পারেন। তবে, আপনার স্বাস্থ্য পর্যবেক্ষণ করা এবং নিয়মিত চিকিৎসা পরীক্ষা করানো চালিয়ে যান।")
            st.write(" - **রিকল (Recall, 0.93)**: মডেলটি ৯৩% সুস্থ ব্যক্তিকে সঠিকভাবে শনাক্ত করতে পারে, যা নির্দেশ করে যে আপনি সম্ভবত সুস্থ আছেন। তবুও, একটি স্বাস্থ্যকর জীবনধারা বজায় রাখা এবং আপনার স্বাস্থ্যের যেকোন পরিবর্তনের দিকে মনোযোগ দেওয়া গুরুত্বপূর্ণ।")
            st.write(" - **এফ১-স্কোর (F1-Score, 0.92)**: ফুসফুসের ক্যান্সার নেই তা সঠিকভাবে মূল্যায়নের ক্ষেত্রে মডেলের কার্যকারিতা ভালো। তবে প্রতিরোধমূলক স্বাস্থ্যসেবা বজায় রাখা এবং কোনো সম্ভাব্য স্বাস্থ্য উদ্বেগকে উপেক্ষা না করাই ভালো।")
            st.write("নিয়মিত শারীরিক পরীক্ষা এবং একটি স্বাস্থ্যকর জীবনধারা আপনাকে ভালো অবস্থায় থাকতে সাহায্য করতে পারে। কোনো অপ্রত্যাশিত উপসর্গ উপেক্ষা করবেন না এবং আপনার সামগ্রিক সুস্থতার যত্ন নিতে থাকুন।")

        
    except Exception as e:
        st.error(f"Error: {e}")

# Add Potential Dangers Section with a responsive layout
if st.button('সম্ভাব্য ঝুঁকি'):
    try:
        feat_imp = pd.DataFrame({'প্রভাবক':['লিঙ্গ','বয়স','ধূমপান','হলুদাভ ত্বক','দুশ্চিন্তা','সামাজিক চাপ', 'দীর্ঘস্থায়ী রোগ', 'ক্লান্তি', 'এলার্জি', 'হুইজিং', 'মদ্যপান', 'কাশি', 'শ্বাসকষ্ট','গলাধঃকরণ জটিলতা', 'বুক ব্যথা'],'ঝুঁকির মাত্রা':model.feature_importances_*100}).sort_values(by='ঝুঁকির মাত্রা',ascending=False)
        
        st.write(feat_imp)

        # Optional: Visualize the feature importances as a bar chart
        st.bar_chart(feat_imp.set_index('প্রভাবক')['ঝুঁকির মাত্রা'])

    except Exception as e:
        st.error(f"An error occurred: {e}")
